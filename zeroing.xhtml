<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

  <head>
    <meta charset="utf-8" />

    <title>Zeroing and the semantic gap between host and guest</title>

    <meta name="description" content="FireCRaCer: The Best Of Both Worlds" />
    <meta name="author" content="Volker H. Simonis" />

    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui" />

    <link rel="stylesheet" href="reveal.js/css/reveal.css" />
    <link rel="stylesheet" href="reveal.js/css/theme/joker2017.css" id="theme" />

    <!-- Code syntax highlighting -->
    <link rel="stylesheet" href="reveal.js/lib/css/monokai_sublime.css" />

    <style type="text/css">
/* override basic settings from joker2017.css */
.reveal {
  font-family: "Roboto Condensed", "sans-serif";
  font-size: 36px;
  font-weight: normal;
  color: #93a1a1; }

.scrollable {
    bottom: 0px;
    overflow-y: auto  !important;
    overflow-x: hidden !important;
}

.reveal .slides > section.demo,
.reveal .slides > section > section.demo {
    padding: 0;
}

.reveal .big {
    font-size: .8em;
    line-height: 1.3em;
}

.reveal pre.console {
    background-color: black;
    color: #00ff00;
}

code.terminal .hljs-title {
    color: #00ff00;
}

/* Used for styling command lines in a 'java' code block */
code.java .hljs-title-terminal {
    color: #00ff00;
}

.reveal pre.noshadow {
    border-radius: 0;
    box-shadow: unset;
}

.reveal pre code {
    max-height: 100%;
}
.bold {
    font-weight: bold;
}

.reveal .outline_white {
    color: white;
    text-shadow:
        -2px -2px 0 #000,
         2px -2px 0 #000,
        -2px  2px 0 #000,
         2px  2px 0 #000;
    min-height: 1.1em;
    text-align: center;
}
.reveal .outline_black {
    color: black;
    text-shadow:
        -2px -2px 0 #fff,
         2px -2px 0 #fff,
        -2px  2px 0 #fff,
         2px  2px 0 #fff;
    min-height: 1.1em;
    text-align: center;
}

.reveal .slide-number {
    position: fixed;
    display: block;
    left: 15px;
    bottom: 15px;
    opacity: 0.9;
    z-index: 31;
    font-size: 14px;
    text-align: center;
}
.reveal h1, .reveal h2, .reveal h3, .reveal h4, .reveal h5, .reveal h6 {
    text-transform: none;
}

.hljs-class .hljs-title {
    /* fix "public static class Y extends X {" such that 'Y' will be formatted the same like 'X' */
    color: #A6E22E;
    font-style: italic;
}

mark {
    color: black;
    background-color: lightyellow;
    border-radius: 10px;
}
mark.orange {
    color: black;
    background-color: orange;
    border-radius: 10px;
}
mark.border {
    color: inherit;
    background-color: inherit;
    border: 5px solid #1B91FF;
    /* Use a negative margin with the same size as the border to avoid size changes of elemnts with borders or when the border is set dynamically by fragments */
    margin: 0 -5px 0 -5px;
    border-radius: 10px;
}
mark.border-no-top {
    color: inherit;
    background-color: inherit;
    margin: 0 -5px 0 -5px;
    border-style: solid;
    border-color: #1B91FF;
    border-width: 0px 5px 5px 5px;
    border-radius: 0px 0px 10px 10px;
}
mark.border-no-bottom {
    color: inherit;
    background-color: inherit;
    margin: 0 -5px 0 -5px;
    border-style: solid;
    border-color: #1B91FF;
    border-width: 5px 5px 0px 5px;
    border-radius: 10px 10px 0px 0px;
}

.reveal .slides section .fragment.highlight-border, .reveal .slides section .fragment.highlight-current-border {
  opacity: 1;
  visibility: visible;
  /* Define a transparent border with the same size for inactive fragments such that we have no size changes when the fragments get displayed */
  border-width: 3px 3px 3px 3px;
  border-style: solid;
  border-color: transparent;
  /* Use a negative margin with the same size as the border to avoid size changes of elemnts with borders or when the border is set dynamically by fragments */
  margin: -3px;
}
.reveal .slides section .fragment.highlight-border.visible {
  border: 3px solid #1B91FF;
  border-radius: 10px;
  margin: 3px -3px 3px -3px;
}
.reveal .slides section .fragment.highlight-current-border.current-fragment {
  border: 3px solid #1B91FF;
  border-radius: 10px;
  margin: -3px;
}
.reveal .slides section .fragment.highlight-current-border.red.current-fragment {
  border: 3px solid #F00;
  border-radius: 10px;
  margin: -3px;
}
.reveal .slides section .fragment.highlight-current-border.border-no-top.current-fragment {
  border-style: solid;
  border-color: transparent #1B91FF #1B91FF #1B91FF;
  border-width: 3px;
  border-radius: 0px 0px 10px 10px;
  margin: -3px;
}
.reveal .slides section .fragment.highlight-current-border.border-no-bottom.current-fragment {
  border-style: solid;
  border-color: #1B91FF #1B91FF transparent #1B91FF;
  border-width: 3px;
  border-radius: 10px 10px 0px 0px;
  margin: -3px;
}
.reveal .slides section .fragment.highlight-current-border.border-no-bottom-top.current-fragment {
  border-style: solid;
  border-color: transparent #1B91FF transparent #1B91FF;
  border-width: 3px;
  border-radius: 0px 0px 0px 0px;
  margin: -3px;
}


  table.calling_hirarchy {
/*    font-family: monospace, arial, helvetica, sans-serif; */
/*    background-color: #ffffff; */
    font-size: smaller;
    border-collapse: collapse;
    margin: 0px auto;
    padding: 2px;
    width: auto;
    overflow: auto;
    border: none;
  }

  table.calling_hirarchy tr {
    border: none;
  }

  table.calling_hirarchy td {
    padding: 4px;
/*    font-family: monospace; */
  }

  td.indent_level_0 {
    border-style: solid;
    border-width: 2px;
    background-color: #a0a0a0;
  }
  td.indent_level_1 {
    border-style: solid;
    border-width: 2px;
    background-color: #a8a8a8;
  }
  td.indent_level_2 {
    border-style: solid;
    border-width: 2px;
    background-color: #b0b0b0;
  }
  td.indent_level_3 {
    border-style: solid;
    border-width: 2px;
    background-color: #b8b8b8;
  }
  td.indent_level_4 {
    border-style: solid;
    border-width: 2px;
    background-color: #c0c0c0;
  }
  td.indent_level_5 {
    border-style: solid;
    border-width: 2px;
    background-color: #c8c8c8;
  }
  td.indent_level_6 {
    border-style: solid;
    border-width: 2px;
    background-color: #d0d0d0;
  }
  td.indent_level_7 {
    border-style: solid;
    border-width: 2px;
    background-color: #d8d8d8;
  }
  td.indent_level_8 {
    border-style: solid;
    border-width: 2px;
    background-color: #e0e0e0;
  }
  td.indent_level_9 {
    border-style: solid;
    border-width: 2px;
    background-color: #e8e8e8;
  }
  td.indent_level_10 {
    border-style: solid;
    border-width: 2px;
    background-color: #f0f0f0;
  }
  td.indent_level_11 {
    border-style: solid;
    border-width: 2px;
    background-color: #f8f8f8;
  }
  td.indent_level_12 {
    border-style: solid;
    border-width: 2px;
    background-color: #ffffff;
  }
  td.functionCall {
/*    font-weight: bold; */
    color: darkblue;
  }
  td.javaCall {
    font-weight: bold;
    color: darkgreen;
  }
  td.comment {
    font-style: italic;
    color: maroon;
  }
  td.highlight {
    border-style: solid;
    border-width: 2px;
    background-color: #a0ffa0;
  }
  table.calling_hirarchy td[rowspan] {
    border-style: none;
    border-width: 0;
    border-left: dotted;
    border-left-width: 2px;
  }

/* The Quiz (background) */
.reveal .slides section .quiz {
    display: none; /* Hidden by default */
}

.reveal .slides section .fragment.quiz {
    display: none; /* Hidden by default */
}

.reveal .slides section .fragment.quiz.current-fragment {
    display: block;
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
}

/* Quiz Content */
.reveal .slides section .quiz-content {
    display: inline-block;
    position: relative;
    background-color: #fefefe;
    margin: auto;
    padding: 0;
    border: 1px solid #888;
    width: auto;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
    -webkit-animation-name: animatetop;
    -webkit-animation-duration: 0.4s;
    animation-name: animatetop;
    animation-duration: 0.4s
}

/* Add Animation */
@-webkit-keyframes animatetop {
    from {top:-300px; opacity:0}
    to {top:0; opacity:1}
}

@keyframes animatetop {
    from {top:-300px; opacity:0}
    to {top:0; opacity:1}
}

.reveal .slides section .quiz-header {
    padding: 12px 12px;
    background-color: #7571ff;
/*  background-color: #5cb85c; */
    color: white;
}

.reveal .slides section .quiz-header h2 {
    margin: 0;
}

.reveal .slides section .quiz-body {
    padding: 12px 16px;
    color: #3f3f3f;
}

.reveal .slides section .quiz-body li:not(:last-child) {
    margin-bottom: 15px;
}

.reveal .slides section .quiz-footer {
    padding: 12px 16px;
    background-color: #7571ff;
/*  background-color: #5cb85c; */
    color: white;
}

.reveal .left-footer {
    display: block;
    position: fixed;
    z-index: 30;
    left: 15px;
    bottom: 15px;
    font-size: 12px;
    color: #eee8d5;
}

ul.before::before, ol.before::before {
    content:attr(data-header);
    font-size:120%;
    font-weight:bold;
    margin-left: -2ex;
}
pre.after.small::after {
    content:attr(data-footer);
    font-size: 0.5em;
    font-family: "Roboto Condensed", "sans-serif";
}
</style>

    <!-- Printing and PDF exports -->
    <script>
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'reveal.js/css/print/pdf.css' : 'reveal.js/css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    </script>

    <!--[if lt IE 9]>
    <script src="reveal.js/lib/js/html5shiv.js"></script>
    <![endif]-->

    <!--
      Issue #1105: Keyboard shortcut to skip forward/back over fragments #1173
      https://github.com/hakimel/reveal.js/pull/1173
    -->
  </head>

<!--
;; indent block of text
;; C-u <number> C-x <TAB>



;; select this code and do 'M-x eval-region'
(defun make-fragment (p1 p2)
  "Wraps the selection into 'fragment' <span>s and quotes '&', '<' and '>'."
  (interactive "r")
  (setq inputStr (buffer-substring-no-properties p1 p2))
  (setq inputStr (replace-regexp-in-string "&" "&amp;" inputStr))
  (setq inputStr (replace-regexp-in-string "<" "&lt;" inputStr))
  (setq inputStr (replace-regexp-in-string ">" "&gt;" inputStr))
  (setq resultStr (concat "<span class=\"fragment\">" (concat inputStr "</span>")))
  (delete-region p1 p2)
  (insert resultStr)
)
(defun make-fragment-simple (p1 p2)
  "Wraps the selection into 'fragment' <span>s without any quoting."
  (interactive "r")
  (setq inputStr (buffer-substring-no-properties p1 p2))
  (setq resultStr (concat "<span class=\"fragment highlight-current-border\" data-fragment-index=\"X\">" (concat inputStr "</span>")))
  (delete-region p1 p2)
  (insert resultStr)
)
(defun quote-fragment (p1 p2)
  "Quotes '&', '<' and '>'."
  (interactive "r")
  (setq inputStr (buffer-substring-no-properties p1 p2))
  (setq inputStr (replace-regexp-in-string "&" "&amp;" inputStr))
  (setq inputStr (replace-regexp-in-string "<" "&lt;" inputStr))
  (setq inputStr (replace-regexp-in-string ">" "&gt;" inputStr))
  (delete-region p1 p2)
  (insert inputStr)
)

(global-set-key (kbd "C-f") 'make-fragment)
(global-set-key (kbd "C-S-f") 'make-fragment-simple)
(global-set-key (kbd "C-S-q") 'quote-fragment)
;; revert key-binding
;; (global-set-key (kbd "C-f") 'forward-char)
;;
;; use 'C-h k <keystroke>' to find out what <keystroke> ia currently bound to

;; (vhs) The following is required to make 'C-c C-t' insert <code> tags without
;; newlines. 'sgml-tag-alist' is the "file-local" version of 'html-tag-alist'
(add-to-list 'html-tag-alist '("code"))
(add-to-list 'sgml-tag-alist '("code"))

-->

  <body>

    <div class="reveal">


    <div class="left-footer">
       <object data="images/AWS_transparent.png" alt="AWS logo" type="image/png" style="vertical-align: middle; width: 40px; margin: 0 10px 0 0;"/>
       <span>© 2024, Amazon Web Services, Inc. or its affiliates. All rights reserved.</span>
    </div>

      <!-- Any section element inside of this container is displayed as a slide -->
      <div class="slides">

        <section data-background="images/background_title.jpg" style="text-align: left;">
          <p style="margin-bottom : 6em;"></p>
          <h1>Zeroing and the<br/>Semantic Gap between Host and Guest</h1>
          <p>
            Volker Simonis (<a href="https://twitter.com/volker_simonis">@volker_simonis</a>)<br/>
            Principal Software Engineer<br/>
            AWS
          </p>
        </section>

        <section data-background="images/background_default.jpg">
          <h2 style="text-transform: none;">
            <a href="https://simonis.github.io/FOSDEM2024/" style="color: inherit;">https://simonis.github.io/FOSDEM2024/</a>
          </h2>
        </section>

        <section data-background="images/background_default.jpg">
          <h1>About me</h1>

          <ul class="before" data-header="Present:" style="width: 60%;">
            <li>Principal Software Engineer @ Amazon Corretto</li>
            <li>OpenJDK Member, Committer &amp; Reviewer</li>
            <li>OpenJDK Build, Hotspot, Porters &amp; Vulnerability Group</li>
            <li>Java Community Process Executive Committee</li>
          </ul>

          <ul class="before" data-header="Past:" style="width: 60%;">
            <li>SAP JVM and SapMachine @ SAP</li>
            <li>OpenJDK Build PowerPC/AIX &amp; s390x Project Lead </li>
            <li>JCP Expert Groups for Java SE 9 to 13</li>
            <li>OpenJDK Governing Board (2022/23)</li>
          </ul>
        </section>

        <section data-background="images/background_default.jpg">
          <h1><a href="https://criu.org">CRIU</a> &amp; <a href="https://wiki.openjdk.org/display/crac">CRaC</a></h1>

          <ul class="before" data-header="CRIU: Checkpoint and Restore In Userspace" style="width: 70%;">
            <li>Serializes process/tree to the file system</li>
            <li>Only saves <a href="https://criu.org/Memory_dumps">anonymous/dirty</a> pages</li>
          </ul>
          <br/>
          <br/>
          <ol class="before fragment" data-header="CRaC: Coordinated Restore at Checkpoint" style="width: 70%;">
            <li class="fragment">Create a userland checkpoint/restore notification API
              <ul>
                <li>Support in <a href="https://docs.spring.io/spring-framework/reference/integration/checkpoint-restore.html">Spring</a>,
                  <a href="https://micronaut-projects.github.io/micronaut-crac/latest/guide/">Micronaut</a>,
                  <a href="https://github.com/quarkusio/quarkus/pull/23950">Quarkus</a>,
                  <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart-runtime-hooks.html">AWS Lambda</a>, ...
                </li>
              </ul>
            </li>
            <li class="fragment">Make the JDK "<em>snapsafe</em>":
              <ul>
                <li>i.e. act gracefully on checkpoint/restore &amp; <strong><em>clone</em></strong> events</li>
              </ul>
            </li>
            <li class="fragment">Uses CRIU for checkpoint/restore</li>
          </ol>
        </section>

        <section data-background="images/background_default.jpg">

          <h1 style="text-transform: none;">CRIU &amp; CRaC DEMO</h1>

        </section>

        <section data-background="images/background_default.jpg">
          <h3>JVM process/snapshot size in MB</h3>

          <table>
            <thead>
              <tr>
                <th></th>
                <th>JVM RSS</th>
                <th>Image size</th>
                <th>Restore</th>
                <th>Request</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td></td>
                <td style="text-align: right;"><span class="fragment highlight-current-border" data-fragment-index="10">538</span></td>
                <td style="text-align: right;">501</td>
                <td style="text-align: right;"><span class="fragment highlight-current-border" data-fragment-index="10">522</span></td>
                <td style="text-align: right;">528</td>
              </tr>
              <tr class="fragment" data-fragment-index="20">
                <td>CRaC</td>
                <td style="text-align: right;">533</td>
                <td style="text-align: right;"><span class="fragment highlight-current-border" data-fragment-index="22">263</span></td>
                <td style="text-align: right;"><span class="fragment highlight-current-border" data-fragment-index="24">281</span></td>
                <td style="text-align: right;"><span class="fragment highlight-current-border" data-fragment-index="26">295</span></td>
              </tr>
              <tr>
              </tr>
            </tbody>
          </table>
        </section>

        <section data-background="images/background_default.jpg">
          <h1>About <a href="https://firecracker-microvm.github.io/">Firecracker</a></h1>

          <ul>
            <li>Minimalistic virtual machine monitor (VMM)</li>
            <li>KVM backed</li>
            <li>Limited devices:
              block/<a href="https://github.com/firecracker-microvm/firecracker/blob/main/docs/network-setup.md">network</a>
              (virtio),
              <a href="https://github.com/firecracker-microvm/firecracker/blob/main/docs/vsock.md">vsock</a>, serial</li>
            <li>REST-based configuration</li>
            <li>Written in Rust (based on <a href="https://chromium.googlesource.com/chromiumos/platform/crosvm/">crosvm</a>,
              now <a href="https://github.com/rust-vmm">rust-vmm</a>)</li>
            <li><a href="https://github.com/firecracker-microvm/firecracker/blob/main/docs/mmds/mmds-user-guide.md">
              MicroVM-Metadata Service</a> (JSON/IMDS)</li>
            <li><a href="https://github.com/firecracker-microvm/firecracker/blob/main/docs/jailer.md">Sandboxing</a>
              (cgroup, chroot, seccomp)</li>
            <li>Apache 2 licensed</li>
            <li>Use e.g. in AWS <a href="https://aws.amazon.com/lambda/">Lambda</a> &amp;
              <a href="https://aws.amazon.com/blogs/containers/under-the-hood-fargate-data-plane/">Fargate</a></li>
          </ul>
        </section>

        <section data-background="images/background_default.jpg">

          <div style="position: relative; margin: auto; width: 90%;">
            <div class="" style="position: static;">
              <object data="images/Firecracker_1.svg"
                      type="image/svg+xml" style="position: absolute; left: 0; top: 0; width: 100%;">&nbsp;</object>
            </div>
            <div class="fragment" style="position: static;">
              <object data="images/Firecracker_2.svg"
                      type="image/svg+xml" style="position: absolute; left: 0; top: 0; width: 100%;">&nbsp;</object>
            </div>
            <div class="fragment" style="position: static;">
              <object data="images/Firecracker_3.svg"
                      type="image/svg+xml" style="position: absolute; left: 0; top: 0; width: 100%;">&nbsp;</object>
            </div>
            <div class="fragment" style="position: static;">
              <object data="images/Firecracker_4.svg"
                      type="image/svg+xml" style="position: absolute; left: 0; top: 0; width: 100%;">&nbsp;</object>
            </div>
            <div class="fragment" style="position: static;">
              <object data="images/Firecracker_5.svg"
                      type="image/svg+xml" style="position: absolute; left: 0; top: 0; width: 100%;">&nbsp;</object>
            </div>
            <div class="fragment" style="position: static;">
              <object data="images/Firecracker_6.svg"
                      type="image/svg+xml" style="position: absolute; left: 0; top: 0; width: 100%;">&nbsp;</object>
            </div>
          </div>
        </section>

        <section data-background="images/background_default.jpg">
          <h1>Firecracker Demo</h1>

        </section>

        <section style="padding: 0;" data-background="images/background_default.jpg">
          <!--
          <h3>Firecracker process/snapshot and JVM size in MB</h3>
          -->
          <table>
            <thead>
              <tr>
                <th></th>
                <th>Base</th>
                <th class="fragment" data-fragment-index="20">Checkp.</th>
                <th class="fragment" data-fragment-index="40">Balloon</th>
                <th>Snapshot</th>
                <th>Restore</th>
                <th>Request</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="2"><span class="fragment" data-fragment-index="2">Firecracker (host)</span><br/>
                  <span class="fragment" data-fragment-index="4">JVM (guest)</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="2">697</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="5">661</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="6">50</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="7">266</span></td>
              </tr>
              <tr>
                <td style="text-align: right; padding-top: 0;"><span class="fragment highlight-current-border" data-fragment-index="4">534</span></td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;">534</td>
                <td style="text-align: right; padding-top: 0;">535</td>
              </tr>

              <tr class="fragment" data-fragment-index="20">
                <td rowspan="2">CRaC</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">668</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">672</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="22">633</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">50</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">272</td>
              </tr>
              <tr class="fragment" data-fragment-index="20">
                <td style="text-align: right; padding-top: 0;">507</td>
                <td style="text-align: right; padding-top: 0;"><span class="fragment highlight-current-border" data-fragment-index="22">292</span></td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;">292</td>
                <td style="text-align: right; padding-top: 0;">296</td>
              </tr>

              <tr class="fragment" data-fragment-index="25">
                <td rowspan="2">trim_native<br/>zero_unused_heap</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">681</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border border-no-bottom" data-fragment-index="26">937</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="27">469</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">51</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">262</td>
              </tr>
              <tr class="fragment" data-fragment-index="25">
                <td style="text-align: right; padding-top: 0;">519</td>
                <td style="text-align: right; padding-top: 0;"><span class="fragment highlight-current-border border-no-top" data-fragment-index="26">765</span></td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;">765</td>
                <td style="text-align: right; padding-top: 0;">766</td>
              </tr>

              <tr class="fragment" data-fragment-index="30">
                <td rowspan="2">CRaC &amp;<br/>init_on_free</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="32">1050</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">1050</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="33">422</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">48</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">267</td>
              </tr>
              <tr class="fragment" data-fragment-index="30">
                <td style="text-align: right; padding-top: 0;">533</td>
                <td style="text-align: right; padding-top: 0;">302</td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;">302</td>
                <td style="text-align: right; padding-top: 0;">307</td>
              </tr>

              <tr class="fragment" data-fragment-index="40">
                <td rowspan="2">CRaC &amp;<br/>balloon</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">680</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">687</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="42">430</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="43">655</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">48</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">271</td>
              </tr>
              <tr class="fragment" data-fragment-index="40">
                <td style="text-align: right; padding-top: 0;">530</td>
                <td style="text-align: right; padding-top: 0;">303</td>
                <td style="text-align: right; padding-top: 0;">274</td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;">276</td>
                <td style="text-align: right; padding-top: 0;">287</td>
              </tr>

              <tr class="fragment" data-fragment-index="50">
                <td rowspan="2">CRaC &amp; balloon<br/>init_on_free</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">1050</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">1050</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="52">436</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;"><span class="fragment highlight-current-border" data-fragment-index="53">335</span></td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">58</td>
                <td style="text-align: right; border-style: none; padding-bottom: 0;">276</td>
              </tr>
              <tr class="fragment" data-fragment-index="50">
                <td style="text-align: right; padding-top: 0;">530</td>
                <td style="text-align: right; padding-top: 0;">308</td>
                <td style="text-align: right; padding-top: 0;">283</td>
                <td style="text-align: right; padding-top: 0;"></td>
                <td style="text-align: right; padding-top: 0;">277</td>
                <td style="text-align: right; padding-top: 0;">283</td>
              </tr>
            </tbody>
          </table>
        </section>

        <section data-background="images/background_default.jpg">
          <h1>References</h1>

          <ul>
            <li><a href="https://criu.org/Main_Page">
                CRIU</a></li>
           <li><a href="https://www.usenix.org/conference/nsdi20/presentation/agache">
                Firecracker: Lightweight Virtualization for Serverless Applications</a></li>
            <li><a href="https://github.com/firecracker-microvm/firecracker/blob/main/docs/design.md">
                Firecracker Design</a></li>
            <li><a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">
                Improving startup performance with Lambda SnapStart</a></li>
            <!--
            <li><a href="https://www.talhoffman.com/2021/07/18/firecracker-internals/">
                Firecracker internals: a deep dive inside the technology powering AWS Lambda</a></li>
            -->
            <li><a href="https://github.com/firecracker-microvm/firecracker/blob/main/docs/snapshotting/snapshot-support.md">
                Firecracker snapshot support</a></li>
            <li><a href="https://pmhahn.github.io/virtio-balloon/">
                VirtIO Memory Ballooning</a></li>
            <li><a href="https://github.com/firecracker-microvm/firecracker/blob/main/docs/ballooning.md">
                Firecracker ballooning support</a></li>
            <li><a href="https://wiki.openjdk.org/display/crac">
                OpenJDK Project: Coordinated Restore at Checkpoint</a></li>
            <li><a href="https://github.com/torvalds/linux/commit/6471384af">
                mm: security: introduce init_on_alloc=1 and init_on_free=1 boot options</a>
            <li><a href="https://docs.kernel.org/admin-guide/mm/ksm.html">
                Kernel Samepage Merging (KSM)</a><br/>&nbsp;</li>
            <li>FireCRaCer scripts:
              <a href="https://github.com/simonis/fireCRaCer">https://github.com/simonis/fireCRaCer</a></li>
            </li>
          </ul>
        </section>

        <section data-background="images/background_default.jpg">
          <h2 style="text-transform: none;">
            <a href="https://simonis.github.io/FOSDEM2024/" style="color: inherit;">https://simonis.github.io/FOSDEM2024/</a>
          </h2>
        </section>

      </div>

    </div>

    <script src="reveal.js/lib/js/head.min.js"></script>
    <script src="reveal.js/js/reveal.js"></script>

    <script>

      // Full list of configuration options available at:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        //width: 1024,
        //height: 768,
        width: 1280,
        height: 720,
        //width: 1366,
        //height: 768,
        //width: 1920,
        //height: 1080,
        margin: 0.1,
        controls: true,
        progress: true,
        history: true,
        center: true,
        slideNumber: true,

        transition: 'none', // none/fade/slide/convex/concave/zoom

        // Optional reveal.js plugins
        dependencies: [
          { src: 'reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'reveal.js/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'reveal.js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'reveal.js/plugin/highlight/highlight.js', async: true, condition: function() { return !!document.querySelector( 'pre code' ); }, callback: function() {

hljs.registerLanguage('terminal', function(hljs) {
  return {
    contains: [
      hljs.C_LINE_COMMENT_MODE,
      {
        className: 'title',
        lexemes: /[$()>_a-zA-Z0-9]+/,
        keywords: "$ (gdb) hsdb>",
        begin: /^\$ |\(gdb\)|hsdb> /,
        end: /[^\\]\n/,
	contains: [
          hljs.COMMENT('//', '$', { endsParent: true })
	]
      }
    ]
  }
});

hljs.initHighlightingOnLoad(); } },
          { src: 'reveal.js/plugin/zoom-js/zoom.js', async: true },
          { src: 'reveal.js/plugin/notes/notes.js', async: true }
        ]
      });

      //Reveal.configure({ slideNumber: true });



<![CDATA[

      // This function was adapted from:
      // Titus Cieslewski (https://stackoverflow.com/users/796329/titus-cieslewski) and
      // Dan Harper (https://stackoverflow.com/users/148975/danharper) from:
      // https://stackoverflow.com/questions/808826/draw-arrow-on-canvas-tag
      function canvas_arrow(context, fromx, fromy, tox, toy){
        var headlen = 10;   // length of head in pixels
        var angle = Math.atan2(toy-fromy,tox-fromx);
        context.lineCap = 'round';
        context.moveTo(fromx, fromy);
        context.lineTo(tox, toy);
        context.moveTo(tox, toy);
        context.lineTo(tox-headlen*Math.cos(angle-Math.PI/6),toy-headlen*Math.sin(angle-Math.PI/6));
        context.moveTo(tox, toy);
        context.lineTo(tox-headlen*Math.cos(angle+Math.PI/6),toy-headlen*Math.sin(angle+Math.PI/6));
      }

      function drawArrow(canvas, from, target, color) {
        var ctx = canvas.getContext("2d");
        ctx.lineWidth = 3;
        ctx.strokeStyle= color;
        var x1, y1, x2, y2;
        if ((from.offsetTop + from.offsetHeight) < (target.offsetTop)) {
          // 'from' above 'target'
          if ((from.offsetLeft + from.offsetWidth) < (target.offsetLeft)) {
            // 'from' feft of 'target'
            x1 = from.offsetLeft + from.offsetWidth;
            y1 = from.offsetTop + from.offsetHeight;
            x2 = target.offsetLeft;
            y2 = target.offsetTop;
          }
          else if ((from.offsetLeft) > (target.offsetLeft + target.offsetWidth)) {
            // 'from' right of 'target'
            x1 = from.offsetLeft;
            y1 = from.offsetTop + from.offsetHeight;
            x2 = target.offsetLeft + target.offsetWidth;
            y2 = target.offsetTop;
          }
          else {
            x1 = from.offsetLeft + (from.offsetWidth / 2);
            y1 = from.offsetTop + from.offsetHeight;
            x2 = target.offsetLeft + (target.offsetWidth / 2);
            y2 = target.offsetTop;
          }
        }
        else if ((from.offsetTop) > (target.offsetTop + target.offsetHeight)) {
          // 'from' below 'target'
          if ((from.offsetLeft + from.offsetWidth) < (target.offsetLeft)) {
            // 'from' feft of 'target'
            x1 = from.offsetLeft + from.offsetWidth;
            y1 = from.offsetTop;
            x2 = target.offsetLeft;
            y2 = target.offsetTop + target.offsetHeight;
          }
          else if ((from.offsetLeft) > (target.offsetLeft + target.offsetWidth)) {
            // 'from' right of 'target'
            x1 = from.offsetLeft;
            y1 = from.offsetTop;
            x2 = target.offsetLeft + target.offsetWidth;
            y2 = target.offsetTop + target.offsetHeight;
          }
          else {
            x1 = from.offsetLeft + (from.offsetWidth / 2);
            y1 = from.offsetTop;
            x2 = target.offsetLeft + (target.offsetWidth / 2);
            y2 = target.offsetTop + target.offsetHeight;
          }
        }
        else if ((from.offsetLeft) < (target.offsetLeft)) {
          // 'from' feft of 'target'
          x1 = from.offsetLeft + from.offsetWidth;
          y1 = from.offsetTop + (from.offsetHeight / 2);
          x2 = target.offsetLeft;
          y2 = target.offsetTop + (target.offsetHeight / 2);
        }
        else {
          // 'from' right of 'target'
          x1 = from.offsetLeft;
          y1 = from.offsetTop + (from.offsetHeight / 2);
          x2 = target.offsetLeft + target.offsetWidth;
          y2 = target.offsetTop + (target.offsetHeight / 2);
        }
        ctx.beginPath();
        ctx.moveTo(x1, y1);
        //ctx.bezierCurveTo(30,60,40,100, 50,120);
        ctx.lineTo(x2, y2);
        canvas_arrow(ctx, x1, y1, x2, y2);
        ctx.stroke();
      }

      function handleFragmentEvent(fragments, current, show) {
        var code = current.parentNode;
        var firstArrow = true;
        var fragmentShown = false;

        var canvas, canvases = code.getElementsByTagName("canvas");
        if (canvases.length != 0) {
          canvas = canvases[0];
          canvas.getContext("2d").clearRect(0, 0, canvas.width, canvas.height);
        }
        fragments.forEach(function(fragment, i) {
          if (show === false && current === fragment) fragmentShown = true;
          var cll = fragment.classList;
          if (((cll.contains("highlight-border") && !fragmentShown) ||
               (cll.contains("highlight-current-border") && cll.contains("current-fragment"))) &&
              fragment.hasAttribute("arrow-to")) {

            var target = document.getElementById(fragment.getAttribute("arrow-to"));
            if (canvases.length === 0) {
              canvas = document.createElement("canvas");
              // Place the canvas right over the parent node ..
              canvas.style.position= 'absolute';
              canvas.style.zIndex= '100';
              canvas.style.top= '0px';
              canvas.style.left= '0px';
              // .. and make it the same size.
              canvas.style.width= code.offsetWidth + 'px';
              canvas.style.height= code.offsetHeight + 'px';
              // Make the canvas bounding box (i.e. canvas' css dimensions)
              // and the canvas logical size be the same. That way we don't
              // have to convert between the two coordinate systems of the
              // elemnts on the overlaying DOM element and the canvas.
              canvas.width= code.offsetWidth;
              canvas.height= code.offsetHeight;
              code.appendChild(canvas);
            }
            drawArrow(canvas, fragment, target, "#1b91ff");
          }
          if (show === true && current === fragment) fragmentShown = true;
        });
      }

      Reveal.addEventListener('fragmenthidden', function(event) {
        handleFragmentEvent(event.allFragments, event.fragments[0], false);
      });

      Reveal.addEventListener('fragmentshown', function(event) {
        handleFragmentEvent(event.allFragments, event.fragments[event.fragments.length - 1], true);
      });


]]>
    </script>

  </body>
</html>

<!--  LocalWords:  zlib OpenJDK scrollable px pre hljs noshadow fff
 -->
<!--  LocalWords:  elemnts hirarchy monospace arial helvetica ffffff
 -->
<!--  LocalWords:  td functionCall darkblue javaCall darkgreen ffa cb
 -->
<!--  LocalWords:  rowspan fefefe rgba webkit animatetop keyframes li
 -->
<!--  LocalWords:  eee attr Roboto eval defun setq inputStr substring
 -->
<!--  LocalWords:  resultStr concat kbd ia vhs JNI JDK Changelog CRC
 -->
<!--  LocalWords:  intrinsification Redestad lookups LZ abaca ecb LZZ
 -->
<!--  LocalWords:  aecb daecb mozilla xml aarch MacOSX CVE MacOS ASM
 -->
<!--  LocalWords:  readCount InflaterInputStream cloudflare LFH CFH
 -->
<!--  LocalWords:  src ZipOutputStream putNextEntry ZipEntry's vers
 -->
<!--  LocalWords:  GZIP Gzip infgen FireCRaCer css lightyellow CRIU
 -->
<!--  LocalWords:  snapsafe CRaC Checkpointing VM Samepage GCs AWS GC
 -->
<!--  LocalWords:  userfaultfd Serverless KSM UffdVisualizer crac
 -->
<!--  LocalWords:  JVMTI checkpointing
 -->
